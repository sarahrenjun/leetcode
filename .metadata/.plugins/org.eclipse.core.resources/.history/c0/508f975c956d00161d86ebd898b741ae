package com.iqiyi.pay.channel.ccb.controller;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.WebDataBinder;
import org.springframework.web.bind.annotation.InitBinder;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.iqiyi.pay.channel.ccb.handle.CcbRefundHandle;
import com.iqiyi.pay.channel.ccb.handle.HandleMessage;
import com.iqiyi.pay.channel.ccb.param.request.CcbRefundRequest;
import com.iqiyi.pay.channel.ccb.validator.CcbBindRequestValidator;
import com.iqiyi.pay.channel.ccb.validator.CcbRefundRequestValidator;
import com.iqiyi.pay.channel.controller.RefundController;
import com.iqiyi.pay.channel.request.RefundRequest;
import com.iqiyi.pay.channel.response.BaseResponse;

@RestController
public class CcbRefundController extends RefundController {
	private static final Logger logger = LoggerFactory
			.getLogger(CcbRefundController.class);
	
	@Autowired
	private CcbRefundHandle ccbRefundHandle;
	@Autowired
	private HandleMessage handleMessage;
	
	@Autowired
	private CcbRefundRequestValidator validator;

	@InitBinder
	public void initBinder(WebDataBinder binder) {
		binder.addValidators(validator);

	}
	

	@Override
	protected BaseResponse handle(RefundRequest request) {
		logger.info("[module: CcbRefundController][step:convert input to ccb bind request param][input:{}]",request);
		CcbRefundRequest ccbRefundRequest = ccbRefundHandle.convertToCcbRequest(request);
		String url = environment.getProperty("ccb.pay.host")+environment.getProperty("ccb.pay.path");
		logger.info("bind request url:{}",url);
		String encryptMessage = handleMessage.generateEncryptMessage(ccbRefundRequest, "model/refund.vm");
		logger.info("[module: CcbRefundController][step:send message][message:{}]",encryptMessage);
		String responseMessage = handleMessage.sendMessage(encryptMessage,url);
		logger.info("[module: CcbRefundController][step:convert response message to xml][response message:{}]",responseMessage);
		String xml = handleMessage.getXml(responseMessage);
		logger.info("[module: CcbRefundController][step:convert response message to object][response message:{}]",xml);
		return ccbRefundHandle.convertXmltoObject(xml);
	}

}
