/**
 * *****************************************************
 * Copyright (C) 2016 iQIYI.COM - All Rights Reserved
 * This file is part of iQiyi Pay project.
 * Unauthorized copy of this file, via any medium is strictly prohibited.
 * Proprietary and Confidential.
 * ****************************************************
 **/
package com.iqiyi.pay.channel.ccb.handle;

import java.io.IOException;
import java.util.Date;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.env.Environment;
import org.springframework.stereotype.Component;
import org.xml.sax.SAXException;

import com.iqiyi.pay.channel.ccb.constants.CcbResultCode;
import com.iqiyi.pay.channel.ccb.constants.ConstantParam;
import com.iqiyi.pay.channel.ccb.param.request.CcbPayRequest;
import com.iqiyi.pay.channel.ccb.param.response.CcbPayResponse;
import com.iqiyi.pay.channel.ccb.util.CcbUtil;
import com.iqiyi.pay.channel.constants.ResultCode;
import com.iqiyi.pay.channel.exception.PayException;
import com.iqiyi.pay.channel.request.PayRequest;
import com.iqiyi.pay.channel.response.PayResponse;
import com.iqiyi.pay.channel.util.XmlObjectUtil;
/**
 * 
 * @author renshuangjun_sx on 2016/08/04
 *
 */

@Component
public class CcbPayHandle {
	private static final Logger logger = LoggerFactory
			.getLogger(CcbPayHandle.class);
	
	@Autowired
	private Environment environment;
	@Autowired
	private HandleMessage generateEncryptMessage;
	
	/**
	 * convert input param to ccb bind request param
	 * @param param
	 * @return
	 */
	public CcbPayRequest convertToCcbRequest(PayRequest param) {
		CcbPayRequest ccbPayRequest = new CcbPayRequest();
		ccbPayRequest.setAcct_no(param.getCard_num());
		ccbPayRequest.setCunt_no(environment.getProperty("ccb.counter.number"));
		ccbPayRequest.setCust_nm(param.getUser_name());
		ccbPayRequest.setShop_no(environment.getProperty("ccb.shop.number"));
		ccbPayRequest.setTx_flag("0");
		ccbPayRequest.setTxcode(ConstantParam.CCB_PAY_TXCODE);
		ccbPayRequest.setTxdate(param.getTrans_time().substring(0, 8));
		ccbPayRequest.setTxtime(param.getTrans_time().substring(8));
		ccbPayRequest.setTxseq(CcbUtil.getSysTime());
		ccbPayRequest.setAmount(param.getFee());
		ccbPayRequest.setCurr_cod("01");
		ccbPayRequest.setCurr_iden("0");
		ccbPayRequest.setItem_info(param.getOrder_category());
		ccbPayRequest.setOrder_no(param.getOrder_code());
		ccbPayRequest.setSub_shop_info(environment.getProperty("ccb.sub.shop.number"));
		ccbPayRequest.setSub_shop_name(environment.getProperty("ccb.sub.shop.name"));
		ccbPayRequest.setSub_shop_typ(environment.getProperty("ccb.sub.shop.type"));
		ccbPayRequest.setTx_typ("wszf006");
		return ccbPayRequest;
	}
	
	
	
	/**
	 * convert response xml to object
	 * @param xml
	 * @return
	 */
	public PayResponse convertXmltoObject(String xml) {
		PayResponse response = new PayResponse();
		try {
			CcbPayResponse cpr = XmlObjectUtil.convertXmlToObjectDigester(xml, "UTF-8", "rules/PayResponseDigester.xml");
			logger.info("[ccb bind response object: {}]",cpr);
			if("SUCCESS".equals(cpr.getStatus())) {
				response.setCode(ResultCode.SUCCESS.getCode());
				response.setMsg(ResultCode.SUCCESS.getMsg());
				response.setOrder_code(cpr.getOrder_no());
				response.setFee(cpr.getAmount());
				response.setChannel_trade_time(cpr.getTx_dt());
				response.setChannel_trade_code(cpr.getBank_flow());
				response.setTrans_seq(cpr.getTxseq());
			} else {
				response.setCode(cpr.getCode());
				response.setMsg(cpr.getDesc());
			}
			response.setTrans_seq(cpr.getTxseq());
		} catch (IOException | SAXException e) {
			logger.info("[convert response xml to object error:[message:{},cause:{}]]",e.getMessage(),e.getCause());
			throw new PayException(CcbResultCode.ERROR_OF_CONVERT.getCode(),CcbResultCode.ERROR_OF_CONVERT.getMsg());
		}
		return response; 
	}
}
