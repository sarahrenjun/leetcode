/**
 * *****************************************************
 * Copyright (C) 2016 iQIYI.COM - All Rights Reserved
 * This file is part of iQiyi Pay project.
 * Unauthorized copy of this file, via any medium is strictly prohibited.
 * Proprietary and Confidential.
 * ****************************************************
 */
package com.iqiyi.pay.channel.ccb.controller;

import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;

import javax.validation.Valid;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.WebDataBinder;
import org.springframework.web.bind.annotation.InitBinder;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
import org.xml.sax.SAXException;

import com.iqiyi.pay.channel.ccb.constants.ConstantParam;
import com.iqiyi.pay.channel.ccb.handle.CcbSendCodeHandle;
import com.iqiyi.pay.channel.ccb.handle.HandleMessage;
import com.iqiyi.pay.channel.ccb.param.request.CcbSendCodeRequest;
import com.iqiyi.pay.channel.ccb.param.response.CcbSendCodeResponse;
import com.iqiyi.pay.channel.ccb.util.CcbSignUtil;
import com.iqiyi.pay.channel.ccb.validator.CcbSendCodeRequestValidator;
import com.iqiyi.pay.channel.constants.ResultCode;
import com.iqiyi.pay.channel.controller.SendCodeController;
import com.iqiyi.pay.channel.exception.PayException;
import com.iqiyi.pay.channel.request.SendCodeRequest;
import com.iqiyi.pay.channel.response.BaseResponse;
import com.iqiyi.pay.channel.response.SendCodeResponse;
import com.iqiyi.pay.channel.util.BankConnectionUtil;
import com.iqiyi.pay.channel.util.XmlObjectUtil;

/**
 * 
 * @author renshuangjun_sx on 2016/08/01
 *
 */
@RestController
@RequestMapping(value="/ccb")
public class CcbSendCodeController{
	private static final Logger logger = LoggerFactory
			.getLogger(CcbSendCodeController.class);

//	@Autowired
//	private CcbSendCodeHandle ccbSendCodeHandle;
//	@Autowired
//	private HandleMessage handleMessage;
	
//	@Autowired
//	private CcbSendCodeRequestValidator validator;
//	
//	@InitBinder
//    public void initBinder(WebDataBinder binder){
//        binder.setValidator(validator);
//    }
	
    @RequestMapping(value = "/sendCode", method = {RequestMethod.POST, RequestMethod.GET})
    public BaseResponse execute( @Valid SendCodeRequest request, BindingResult result){
        return null;
    }
	
//	@Override
//	protected BaseResponse handle(SendCodeRequest request) {
////		logger.info("[module: CcbSendCodeController][step:convert input to ccb bind request param][input:{}]",request);
////		CcbSendCodeRequest ccbBindRequest = ccbSendCodeHandle.convertToCcbRequest(request);
////		String url = environment.getProperty("ccb.pay.host")+environment.getProperty("ccb.pay.path");
////		logger.info("bind request url:{}",url);
////		String encryptMessage = handleMessage.generateEncryptMessage(ccbBindRequest, "model/sendCode.vm");
////		logger.info("[module: CcbSendCodeController][step:send message][message:{}]",encryptMessage);
////		String responseMessage = handleMessage.sendMessage(encryptMessage,url);
////		logger.info("[module: CcbSendCodeController][step:get response xml message][response encrypt message:{}]",responseMessage);
////		String xml = handleMessage.getXml(responseMessage);
////		logger.info("[module: CcbSendCodeController][step:convert response message to object][response xml message:{}]",xml);
////		return ccbSendCodeHandle.convertXmltoObject(xml);
//		return null;
//	}
	
	

}
